"use strict";(self.webpackChunkplaybook_website=self.webpackChunkplaybook_website||[]).push([[3557],{3905:function(e,a,o){o.d(a,{Zo:function(){return m},kt:function(){return c}});var r=o(7294);function t(e,a,o){return a in e?Object.defineProperty(e,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[a]=o,e}function n(e,a){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),o.push.apply(o,r)}return o}function i(e){for(var a=1;a<arguments.length;a++){var o=null!=arguments[a]?arguments[a]:{};a%2?n(Object(o),!0).forEach((function(a){t(e,a,o[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(o,a))}))}return e}function s(e,a){if(null==e)return{};var o,r,t=function(e,a){if(null==e)return{};var o,r,t={},n=Object.keys(e);for(r=0;r<n.length;r++)o=n[r],a.indexOf(o)>=0||(t[o]=e[o]);return t}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var p=r.createContext({}),l=function(e){var a=r.useContext(p),o=a;return e&&(o="function"==typeof e?e(a):i(i({},a),e)),o},m=function(e){var a=l(e.components);return r.createElement(p.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},u=r.forwardRef((function(e,a){var o=e.components,t=e.mdxType,n=e.originalType,p=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=l(o),c=t,v=u["".concat(p,".").concat(c)]||u[c]||d[c]||n;return o?r.createElement(v,i(i({ref:a},m),{},{components:o})):r.createElement(v,i({ref:a},m))}));function c(e,a){var o=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var n=o.length,i=new Array(n);i[0]=u;var s={};for(var p in a)hasOwnProperty.call(a,p)&&(s[p]=a[p]);s.originalType=e,s.mdxType="string"==typeof e?e:t,i[1]=s;for(var l=2;l<n;l++)i[l]=o[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,o)}u.displayName="MDXCreateElement"},2826:function(e,a,o){o.r(a),o.d(a,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return m},default:function(){return u}});var r=o(7462),t=o(3366),n=(o(7294),o(3905)),i=["components"],s={sidebar_position:9},p="Versionamento Sem\xe2ntico",l={unversionedId:"guide-best-practices/version",id:"guide-best-practices/version",isDocsHomePage:!1,title:"Versionamento Sem\xe2ntico",description:"Motiva\xe7\xe3o",source:"@site/docs/guide-best-practices/version.md",sourceDirName:"guide-best-practices",slug:"/guide-best-practices/version",permalink:"/bioinfo-playbook/docs/guide-best-practices/version",editUrl:"https://github.com/varstation/bioinfo-playbook/edit/master/website/docs/guide-best-practices/version.md",version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Testes Autom\xe1ticos",permalink:"/bioinfo-playbook/docs/guide-best-practices/tests"},next:{title:"Guia para Cria\xe7\xe3o de Release Notes",permalink:"/bioinfo-playbook/docs/guide-best-practices/changelog"}},m=[{value:"Motiva\xe7\xe3o",id:"motiva\xe7\xe3o",children:[]},{value:"Proposta",id:"proposta",children:[]},{value:"Quando lan\xe7ar a primeira vers\xe3o (<code>v1.0.0</code>)",id:"quando-lan\xe7ar-a-primeira-vers\xe3o-v100",children:[]},{value:"Diferen\xe7as em rela\xe7\xe3o ao SemVer",id:"diferen\xe7as-em-rela\xe7\xe3o-ao-semver",children:[]}],d={toc:m};function u(e){var a=e.components,o=(0,t.Z)(e,i);return(0,n.kt)("wrapper",(0,r.Z)({},d,o,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"versionamento-sem\xe2ntico"},"Versionamento Sem\xe2ntico"),(0,n.kt)("h2",{id:"motiva\xe7\xe3o"},"Motiva\xe7\xe3o"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://semver.org/lang/pt-BR/"},"Semantic Versioning (SemVer)")," \xe9 um manifesto com diretrizes sobre como criar vers\xf5es de software. Tem como objetivo sinalizar como as altera\xe7\xf5es contidas em uma nova vers\xe3o impactam as pessoas e os sistemas que utilizam o programa. O formato \xe9 definido por um caractere v (de vers\xe3o), seguido por tr\xeas n\xfameros inteiros separados por pontos, cada n\xfamero tem significados distintos (",(0,n.kt)("inlineCode",{parentName:"p"},"vMAJOR.MINOR.PATCH"),"). MAJOR quando fazer mudan\xe7as incompat\xedveis na API; MINOR quando adicionar funcionalidades mantendo compatibilidade; e PATCH quando corrigir falhas mantendo compatibilidade. Opcionalmente, pr\xe9-lan\xe7amentos podem ser definidos adicionando a informa\xe7\xe3o separada por tra\xe7o (",(0,n.kt)("inlineCode",{parentName:"p"},"vMAJOR.MINOR.PATCH-RC"),")."),(0,n.kt)("h2",{id:"proposta"},"Proposta"),(0,n.kt)("p",null,"Essa proposta \xe9 inspirada no guia de versionamento e changelog do ",(0,n.kt)("a",{parentName:"p",href:"https://broadinstitute.github.io/warp/docs/contribution/contribute_to_warp/changelog_style"},"WDL Analysis Research Pipelines (WARP)")," e na documenta\xe7\xe3o do SemVer 2.0.0. Tem como objetivo padronizar o versionamento de pipelines e dar significados (ou conven\xe7\xf5es) que facilitam identificar qual vers\xe3o \xe9 a mais recente e o grau de altera\xe7\xf5es feitas de uma vers\xe3o para outra. Al\xe9m disso, o versionamento ajuda na comunica\xe7\xe3o entre os times de bioinform\xe1tica e de desenvolvimento, sinalizando que altera\xe7\xf5es feitas no pipeline podem ou n\xe3o quebrar sistemas integrados. Dessa forma, damos novos significados para cada tipo de incremento de vers\xe3o."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"MAJOR")," - altera\xe7\xf5es nas entradas (",(0,n.kt)("inlineCode",{parentName:"p"},"input"),") ou sa\xeddas (",(0,n.kt)("inlineCode",{parentName:"p"},"output"),") do protocolos, ou seja, na \u201cAPI\u201d do pipeline. Serve tamb\xe9m para sinalizar que o protocolo cumpre os novos requisitos de integra\xe7\xe3o de sistemas (",(0,n.kt)("em",{parentName:"p"},"breaking changes"),") e as boas pr\xe1ticas. Exemplos que levam a uma nova vers\xe3o MAJOR: "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"mudar o nome de uma entrada ou sa\xedda "),(0,n.kt)("li",{parentName:"ul"},"adicionar ou remover entradas ou sa\xeddas"),(0,n.kt)("li",{parentName:"ul"},"tornar opcional ou obrigat\xf3rio entradas ou sa\xeddas"),(0,n.kt)("li",{parentName:"ul"},"mudar estrutura de objetos (struct)"),(0,n.kt)("li",{parentName:"ul"},"adicionar ou remover par\xe2metros de runtime e metadados para integra\xe7\xe3o"),(0,n.kt)("li",{parentName:"ul"},"alterar vers\xe3o da especifica\xe7\xe3o do WDL (1.0 para 1.1 por exemplo)\nUma nova vers\xe3o MAJOR pode ter altera\xe7\xf5es adicionais (MINOR) e melhorias na documenta\xe7\xe3o e corre\xe7\xe3o de bugs (PATCH). Uma nova vers\xe3o MAJOR zera MINOR e PATCH.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"MINOR")," - n\xe3o altera entradas e sa\xeddas do protocolo, ou seja, n\xe3o quebra a \u201cAPI\u201d do ",(0,n.kt)("em",{parentName:"p"},"pipeline"),". Serve para sinalizar que o fluxo do pipeline e programas utilizados podem ter sido modificados. O incremento MINOR sinaliza para o time de bioinform\xe1tica que melhorias foram feitas para obter melhores resultados de an\xe1lise ou de desempenho, ao mesmo tempo sinaliza para o time de desenvolvimento de que a nova vers\xe3o pode substituir a vers\xe3o anterior sem a necessidade de alterar o sistema integrado. Exemplos que levam a uma nova vers\xe3o MINOR: "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"adicionar ou remover tarefas"),(0,n.kt)("li",{parentName:"ul"},"atualizar vers\xe3o de tarefas ou de programas"),(0,n.kt)("li",{parentName:"ul"},"adicionar, remover ou atualizar par\xe2metros de tarefas"),(0,n.kt)("li",{parentName:"ul"},"alterar fluxos de ",(0,n.kt)("em",{parentName:"li"},"pipelines")," e otimiza\xe7\xf5es (",(0,n.kt)("inlineCode",{parentName:"li"},"scatter"),")"),(0,n.kt)("li",{parentName:"ul"},"alterar linhas de comando (",(0,n.kt)("inlineCode",{parentName:"li"},"command"),")"),(0,n.kt)("li",{parentName:"ul"},"alterar par\xe2metros de runtime (CPU, mem\xf3ria, disco)"),(0,n.kt)("li",{parentName:"ul"},"adicionar bancos de dados (de anota\xe7\xe3o)")),(0,n.kt)("p",null,"Uma nova vers\xe3o MINOR por pode ter melhorias na documenta\xe7\xe3o e corre\xe7\xe3o de bugs (PATCH). Uma nova vers\xe3o MINOR zera PATCH."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"PATCH")," - n\xe3o altera entradas e sa\xeddas do protocolo, tarefas e faz otimiza\xe7\xf5es. Serve para corrigir pequenos problemas, como erros de digita\xe7\xe3o ou adicionar documenta\xe7\xe3o faltante. Exemplos:\nadicionar coment\xe1rios de c\xf3digo e adicionar documenta\xe7\xf5es\nreformatar arquivo\nadicionar ou alterar metadados (\u200b\u200bmeta, parameter_meta)\ncorre\xe7\xf5es de bugs\natualizar vers\xe3o de bancos de dados (de anota\xe7\xe3o)"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Desenvolvimento (",(0,n.kt)("inlineCode",{parentName:"strong"},"v0.MINOR.PATCH"),")")," - indica que o pipeline est\xe1 em desenvolvimento. Isso possibilita testar os pipelines e executar manualmente enquanto n\xe3o s\xe3o integrados aos sistemas. Podem haver altera\xe7\xf5es nas entradas e sa\xeddas do protocolo sem criar uma nova vers\xe3o MAJOR. A primeira vers\xe3o de desenvolvimento \xe9 ",(0,n.kt)("inlineCode",{parentName:"p"},"v0.1.0"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Pr\xe9-lan\xe7amento (",(0,n.kt)("inlineCode",{parentName:"strong"},"vMAJOR.0.0-RC"),")")," - indica que uma nova vers\xe3o MAJOR ser\xe1 lan\xe7ada, que cumpre os requisitos de integra\xe7\xe3o ou boas pr\xe1ticas, mas que precisa passar por testes de integra\xe7\xe3o de sistemas. Uma vers\xe3o de pr\xe9-lan\xe7amento tem preced\xeancia menor que a vers\xe3o associada. Uma vers\xe3o de desenvolvimento n\xe3o pode ter pr\xe9-lan\xe7amentos."),(0,n.kt)("h2",{id:"quando-lan\xe7ar-a-primeira-vers\xe3o-v100"},"Quando lan\xe7ar a primeira vers\xe3o (",(0,n.kt)("inlineCode",{parentName:"h2"},"v1.0.0"),")"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"sistema integrado utilizar o pipeline"),(0,n.kt)("li",{parentName:"ul"},"pipeline fazer parte de uma rotina"),(0,n.kt)("li",{parentName:"ul"},"pipeline tornar-se p\xfablico"),(0,n.kt)("li",{parentName:"ul"},"outro pipeline depender (",(0,n.kt)("inlineCode",{parentName:"li"},"import"),")")),(0,n.kt)("h2",{id:"diferen\xe7as-em-rela\xe7\xe3o-ao-semver"},"Diferen\xe7as em rela\xe7\xe3o ao SemVer"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"N\xe3o h\xe1 ponto entre o nome do pr\xe9-lan\xe7amento (RC) para separar o texto da vers\xe3o. Por exemplo, ",(0,n.kt)("inlineCode",{parentName:"li"},"v1.0.0-rc1")," ao inv\xe9s de ",(0,n.kt)("inlineCode",{parentName:"li"},"1.0.0-rc.1"),"."),(0,n.kt)("li",{parentName:"ul"},"N\xe3o \xe9 permitido pr\xe9-lan\xe7amentos de vers\xf5es MINOR e PATCH")))}u.isMDXComponent=!0}}]);