"use strict";(self.webpackChunkplaybook_website=self.webpackChunkplaybook_website||[]).push([[7731],{3905:function(e,a,t){t.d(a,{Zo:function(){return p},kt:function(){return c}});var o=t(7294);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function n(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?n(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function r(e,a){if(null==e)return{};var t,o,i=function(e,a){if(null==e)return{};var t,o,i={},n=Object.keys(e);for(o=0;o<n.length;o++)t=n[o],a.indexOf(t)>=0||(i[t]=e[t]);return i}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)t=n[o],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=o.createContext({}),d=function(e){var a=o.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},p=function(e){var a=d(e.components);return o.createElement(l.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},u=o.forwardRef((function(e,a){var t=e.components,i=e.mdxType,n=e.originalType,l=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),u=d(t),c=i,g=u["".concat(l,".").concat(c)]||u[c]||m[c]||n;return t?o.createElement(g,s(s({ref:a},p),{},{components:t})):o.createElement(g,s({ref:a},p))}));function c(e,a){var t=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var n=t.length,s=new Array(n);s[0]=u;var r={};for(var l in a)hasOwnProperty.call(a,l)&&(r[l]=a[l]);r.originalType=e,r.mdxType="string"==typeof e?e:i,s[1]=r;for(var d=2;d<n;d++)s[d]=t[d];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4518:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return r},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return p},default:function(){return u}});var o=t(7462),i=t(3366),n=(t(7294),t(3905)),s=["components"],r={sidebar_position:4},l="Desenvolvimento do Pipeline",d={unversionedId:"guide-best-practices/development",id:"guide-best-practices/development",isDocsHomePage:!1,title:"Desenvolvimento do Pipeline",description:"Nesta etapa descrevemos o fluxo para implementa\xe7\xe3o dos pipelines de bioinform\xe1tica. Todo o processo de implementa\xe7\xe3o envolve desde a cria\xe7\xe3o do sprint backlog com as tarefas a serem implementadas, setup do ambiente de desenvolvimento, testes e check de c\xf3digo e a ger\xeancia de configura\xe7\xe3o para defini\xe7\xe3o de branches, envio de commits e pull requests.",source:"@site/docs/guide-best-practices/development.md",sourceDirName:"guide-best-practices",slug:"/guide-best-practices/development",permalink:"/bioinfo-playbook/docs/guide-best-practices/development",editUrl:"https://github.com/varstation/bioinfo-playbook/edit/master/website/docs/guide-best-practices/development.md",version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Planejamento, Design e Requisitos",permalink:"/bioinfo-playbook/docs/guide-best-practices/requirements"},next:{title:"Homologacao e monitoramento de testes do pipeline",permalink:"/bioinfo-playbook/docs/guide-best-practices/homologation"}},p=[{value:"Metodologia de desenvolvimento",id:"metodologia-de-desenvolvimento",children:[]},{value:"Gerenciamento de Atividades",id:"gerenciamento-de-atividades",children:[]},{value:"Fluxo de desenvolvimento",id:"fluxo-de-desenvolvimento",children:[{value:"Reposit\xf3rio template para constru\xe7\xe3o de pipelines",id:"reposit\xf3rio-template-para-constru\xe7\xe3o-de-pipelines",children:[]},{value:"Setup do ambiente de desenvolvimento local",id:"setup-do-ambiente-de-desenvolvimento-local",children:[]},{value:"Fluxo do Desenvolvimento local",id:"fluxo-do-desenvolvimento-local",children:[]},{value:"Fluxo do Desenvolvimento para lan\xe7amento de release",id:"fluxo-do-desenvolvimento-para-lan\xe7amento-de-release",children:[]}]},{value:"Branches relacionadas a testes",id:"branches-relacionadas-a-testes",children:[{value:"Exemplo de Pipeline",id:"exemplo-de-pipeline",children:[]}]}],m={toc:p};function u(e){var a=e.components,r=(0,i.Z)(e,s);return(0,n.kt)("wrapper",(0,o.Z)({},m,r,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"desenvolvimento-do-pipeline"},"Desenvolvimento do Pipeline"),(0,n.kt)("p",null,"Nesta etapa descrevemos o fluxo para implementa\xe7\xe3o dos pipelines de bioinform\xe1tica. Todo o processo de implementa\xe7\xe3o envolve desde a cria\xe7\xe3o do sprint backlog com as tarefas a serem implementadas, setup do ambiente de desenvolvimento, testes e check de c\xf3digo e a ger\xeancia de configura\xe7\xe3o para defini\xe7\xe3o de branches, envio de commits e pull requests."),(0,n.kt)("h2",{id:"metodologia-de-desenvolvimento"},"Metodologia de desenvolvimento"),(0,n.kt)("p",null,"No Varstation utilizamos a metodologia \xe1gil de ",(0,n.kt)("a",{parentName:"p",href:"https://pt.wikipedia.org/wiki/Scrum_(desenvolvimento_de_software)"},"Scrum")," . Nossas sprints tem um ciclo de 15 dias com reuni\xf5es di\xe1rias (Daily meetings para acompanhamento e verifica\xe7\xe3o de bloqueios), retrospectivas e reviews (ap\xf3s as sprints) e a planning (3 dias antes de in\xedcio de cada sprint)."),(0,n.kt)("p",null,"Todas estas defini\xe7\xf5es s\xe3o formuladas perante o coordenador de produtos do Varstation e o gerente de bioinform\xe1tica e revisam o fluxo trimestralmente. A cada sprint \xe9 definido os objetivos, as tarefas a serem trabalhadas e os scrum masters (SMs). "),(0,n.kt)("p",null,"Os scrum masters s\xe3o definidos em um rod\xedzio dando oportunidade a todos do time de assumirem o papel de SM (pr\xe9-requisito: ter realizado o treinamento interno de scrum master). Nossos times s\xe3o divididos em squads contendo 1 ou mais bioinformatas e em algumas spritns podem incluir desenvolvedores, designers e analistas de produto."),(0,n.kt)("p",null,(0,n.kt)("img",{src:t(3427).Z}),"\nFigura 8: Processo para desenvolvimento dos pipelines de bioinform\xe1tica do Varstation."),(0,n.kt)("h2",{id:"gerenciamento-de-atividades"},"Gerenciamento de Atividades"),(0,n.kt)("p",null,"Todas as hist\xf3rias de usu\xe1rio s\xe3o armazenadas em nosso board do ",(0,n.kt)("a",{parentName:"p",href:"http://trello.com/"},"Trello"),". Usamos esta ferramenta para ser o reposit\xf3rio de atividades e gest\xe3o do progresso de atividades para o time de desenvolvimento e para os product owners. Para definir a qual board as atividades de um pipeline devem ser catalogadas, converse com o Product Owner e o gerente de bioinform\xe1tica. Eles ser\xe3o organizados em forma de \xe9picos (uma hist\xf3ria com os macro-objetivos que precisam ser quebrados para detalhes) e hist\xf3rias (unidades com tarefas espec\xedficas que guiam o progresso do \xe9pico) que ser\xe3o adicionadas ao sprint backlog em conjunto com o time de desenvolvimento seguindo as pr\xe1ticas da metodologia Scrum."),(0,n.kt)("p",null,"Abaixo um resumo das etapas de uma sprint tradicional de nossos times de constru\xe7\xe3o de pipelines:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Etapa"),(0,n.kt)("th",{parentName:"tr",align:null},"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\xc9picos"),(0,n.kt)("td",{parentName:"tr",align:null},"Hist\xf3ria com macro-objetivos que precisam ser detalhados a cada planejamento de sprint. Geralmente aqui s\xe3o os \xe9picos que saem direto do Bioinformatics Pipeline Canvas.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Backlog"),(0,n.kt)("td",{parentName:"tr",align:null},"Lista de hist\xf3rias que j\xe1 foram detalhadas e aguardam na fila para desenvolvimento, nesta etapa o Product Owner j\xe1 inicia a prioriza\xe7\xe3o das atividades.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Sprint X.X"),(0,n.kt)("td",{parentName:"tr",align:null},"A Sprint Backlog contendo as atividades da sprint corrente. O time de desenvolvimento j\xe1 inicia a aloca\xe7\xe3o de recursos e pessoas para cada atividade.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"In Progress"),(0,n.kt)("td",{parentName:"tr",align:null},"Est\xf3rias em desenvolvimento no momento pelo time de desenvolvimento.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"On Hold"),(0,n.kt)("td",{parentName:"tr",align:null},"Est\xf3rias com algum bloqueio ou impedimento que precisam ser avaliadas em conjunto com o Product Owner ou Scrum Master.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Done Sprint X.X"),(0,n.kt)("td",{parentName:"tr",align:null},"Est\xf3rias validadas e que j\xe1 foram entregues seguindo os crit\xe9rios de aceita\xe7\xe3o.")))),(0,n.kt)("p",null,(0,n.kt)("img",{src:t(8813).Z}),"\nFigura 9: Exemplo de um board de um dos nossos times que trabalham nos projetos de bioinform\xe1tica."),(0,n.kt)("h2",{id:"fluxo-de-desenvolvimento"},"Fluxo de desenvolvimento"),(0,n.kt)("p",null,"Nossos reposit\xf3rios trabalham com tr\xeas branches principais que s\xe3o usadas para diferentes est\xe1gios de pipeline e tr\xeas branches locais para cria\xe7\xe3o de funcionalidades e hotfixes."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Branch"),(0,n.kt)("th",{parentName:"tr",align:null},"Prop\xf3sito"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"develop"),(0,n.kt)("td",{parentName:"tr",align:null},"C\xf3digo que passou pelos testes de desenvolvimento; pre-release para testes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"staging"),(0,n.kt)("td",{parentName:"tr",align:null},"C\xf3digo de release candidate para testes cient\xedficos de homologa\xe7\xe3o")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"master"),(0,n.kt)("td",{parentName:"tr",align:null},"C\xf3digo onde passou todos testes de valida\xe7\xe3o; os candidatos de release publicados")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"feature"),(0,n.kt)("td",{parentName:"tr",align:null},"C\xf3digo local para novas implementa\xe7\xf5es")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"release"),(0,n.kt)("td",{parentName:"tr",align:null},"C\xf3digo para finalizar o release tags")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"hotfix"),(0,n.kt)("td",{parentName:"tr",align:null},"C\xf3digo para resolver problemas cr\xedticos em produ\xe7\xe3o que n\xe3o podem esperar novo release")))),(0,n.kt)("p",null,"Utilizamos o fluxo de git flow que nos permite controlar nossas branch separadas por responsabilidades, n\xe3o impactando na branch master que \xe9 o onde nosso c\xf3digo est\xe1vel se mant\xe9m fiel, utilizamos tag para versionar nossas releases e ter um controle bem mais flex\xedvel."),(0,n.kt)("p",null,(0,n.kt)("img",{src:t(2457).Z}),"\nFigura 7: Fluxo de desenvolvimento de branches utilizando gitflow."),(0,n.kt)("p",null,"Todos detalhes do gitflow podem ser encontrados ",(0,n.kt)("a",{parentName:"p",href:"https://danielkummer.github.io/git-flow-cheatsheet/index.pt_BR.html"},"aqui"),"."),(0,n.kt)("h3",{id:"reposit\xf3rio-template-para-constru\xe7\xe3o-de-pipelines"},"Reposit\xf3rio template para constru\xe7\xe3o de pipelines"),(0,n.kt)("p",null,"No Varstation constru\xedmos um ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Varstation/pipeline-template"},"reposit\xf3rio template")," com todas as configura\xe7\xf5es preparadas para constru\xe7\xe3o de um pipeline do in\xedcio. O reposit\xf3rio template segue a seguinte estrutura de diret\xf3rios e arquivos:"),(0,n.kt)("p",null,(0,n.kt)("img",{src:t(4447).Z}),"\nFigura 8: Reposit\xf3rio com template para constru\xe7\xe3o de pipelines seguindo as boas pr\xe1ticas de desenvolvimento."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Pasta/Arquivo"),(0,n.kt)("th",{parentName:"tr",align:null},"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},".github"),(0,n.kt)("td",{parentName:"tr",align:null},"Pasta que cont\xe9m todos os arquivos de configura\xe7\xe3o do Continuous Integration com Github")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"tests"),(0,n.kt)("td",{parentName:"tr",align:null},"Pasta que cont\xe9m todos os arquivos de configura\xe7\xe3o e suite de testes do pipeline")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"tools"),(0,n.kt)("td",{parentName:"tr",align:null},"Pasta que cont\xe9m scripts utilit\xe1rios utilizados pelas ferramentas de build e deploy")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"docs"),(0,n.kt)("td",{parentName:"tr",align:null},"Pasta contendo toda a documenta\xe7\xe3o do pipeline")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},".gitignore"),(0,n.kt)("td",{parentName:"tr",align:null},"C\xf3digo contendo todos arquivos e diret\xf3rios que devem ser ignorados pelo git em commits")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},".gitmodules"),(0,n.kt)("td",{parentName:"tr",align:null},"C\xf3digo que estrutura as sub-m\xf3dulos para uso comum como tasks, wd-metrics, wd-merge-vcfs, wdl-structs e outros criados")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"CHANGELOG.md"),(0,n.kt)("td",{parentName:"tr",align:null},"C\xf3digo que rastreia as mudan\xe7as a cada release lan\xe7ada")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"README.md"),(0,n.kt)("td",{parentName:"tr",align:null},"C\xf3digo contendo uma breve descri\xe7\xe3o sobre o pipeline e links de acesso r\xe1pido")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"codigo.wdl"),(0,n.kt)("td",{parentName:"tr",align:null},"C\xf3digos-fontes escritos em WDL dos respectivos pipelines")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"requirements-test.txt"),(0,n.kt)("td",{parentName:"tr",align:null},"Arquivo de configura\xe7\xe3o com as bibliotecas necess\xe1rias para instala\xe7\xe3o para execu\xe7\xe3o local e testes do pipeline")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"test.sh"),(0,n.kt)("td",{parentName:"tr",align:null},"Script para execu\xe7\xe3o de testes do pipeline")))),(0,n.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,n.kt)("div",{parentName:"div",className:"admonition-heading"},(0,n.kt)("h5",{parentName:"div"},(0,n.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,n.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,n.kt)("div",{parentName:"div",className:"admonition-content"},(0,n.kt)("p",{parentName:"div"},"Antes de iniciar a constru\xe7\xe3o de um pipeline, verificar se o pipeline a ser desenvolvido \xe9 apenas uma melhoria de um pipeline anterior em produ\xe7\xe3o ou de fato \xe9 um pipeline totalmente novo. Definimos alguns crit\xe9rios para esta verifica\xe7\xe3o, como se h\xe1 apenas melhorias ou hotfixes (consertos) ou o ajustes em par\xe2metros ou arquivos de configura\xe7\xe3o. Recomendamos sempre antes conversar com o time nas reuni\xf5es de planning para estas defini\xe7\xf5es."),(0,n.kt)("p",{parentName:"div"},"Construir pipelines \xe9 uma tarefa \xe1rdua, portanto sempre prezamos pelo reuso, desde que de fato se adeque \xe0s necessidades da pesquisa ou novo exame a ser constru\xeddo."))),(0,n.kt)("p",null,"Trazemos um pequeno fluxograma para avalia\xe7\xe3o de constru\xe7\xe3o de um pipeline do zero ou apenas uma melhoria de um pipeline anterior. Realize ajustes conforme sua necessidade."),(0,n.kt)("p",null,(0,n.kt)("img",{src:t(3416).Z}),"\nFigura 9: Fluxo para avalia\xe7\xe3o de constru\xe7\xe3o de um pipeline a partir do zero ou cria\xe7\xe3o de uma nova vers\xe3o de um pipeline existente."),(0,n.kt)("h3",{id:"setup-do-ambiente-de-desenvolvimento-local"},"Setup do ambiente de desenvolvimento local"),(0,n.kt)("p",null,"Para desenvolvimento local \xe9 necess\xe1rio que voc\xea tenha o git instalado e um reposit\xf3rio v\xe1lido para o pipeline. N\xf3s recomendamos que o pipeline seja derivado de nosso template constru\xeddo para pipeline de bioinform\xe1tica. A opera\xe7\xe3o de fork (templating) \xe9 feito a partir de um bot\xe3o localizado na parte superior \xe0 direita. Uma vez realizado voc\xea ir\xe1 construir um clone do reposit\xf3rio original contendo todos os arquivos e pastas neste novo reposit\xf3rio."),(0,n.kt)("p",null,(0,n.kt)("img",{src:t(1949).Z}),"  ",(0,n.kt)("img",{src:t(6899).Z}),"\nFigura 10: Fluxo para cria\xe7\xe3o do pipeline usando o pipeline template."),(0,n.kt)("ul",{className:"contains-task-list"},(0,n.kt)("li",{parentName:"ul",className:"task-list-item"},(0,n.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Setup do desenvolvimento de Git e GitFlow"),(0,n.kt)("li",{parentName:"ul",className:"task-list-item"},(0,n.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Setup do desenvolvimento de Docker e WDL local"),(0,n.kt)("li",{parentName:"ul",className:"task-list-item"},(0,n.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Setup do desenvolvimento do Ambiente Remoto"),(0,n.kt)("li",{parentName:"ul",className:"task-list-item"},(0,n.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Definir Sprint Backlog e Cronograma alinhado com Product Owner e Scrum Master"),(0,n.kt)("li",{parentName:"ul",className:"task-list-item"},(0,n.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Defini\xe7\xe3o de fluxo de Pull Request e Aprova\xe7\xe3o")),(0,n.kt)("h3",{id:"fluxo-do-desenvolvimento-local"},"Fluxo do Desenvolvimento local"),(0,n.kt)("p",null,"O nosso desenvolvimento local segue o seguinte fluxo ilustrado abaixo:"),(0,n.kt)("p",null,(0,n.kt)("img",{src:t(8902).Z}),"\nFigura 11: Fluxo do desenvolvimento local"),(0,n.kt)("ul",{className:"contains-task-list"},(0,n.kt)("li",{parentName:"ul",className:"task-list-item"},(0,n.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Toda introdu\xe7\xe3o de mudan\xe7as segue uma rotina de testes locais usando ",(0,n.kt)("a",{parentName:"li",href:"(./tests.md)"},"su\xedte de testes automatizados"),";"),(0,n.kt)("li",{parentName:"ul",className:"task-list-item"},(0,n.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","\xc9 realizado uma ",(0,n.kt)("a",{parentName:"li",href:"/bioinfo-playbook/docs/guide-best-practices/style"},"avalia\xe7\xe3o de estilo")," de c\xf3digo-fonte e valida\xe7\xe3o de sintaxe da linguagem WDL;"),(0,n.kt)("li",{parentName:"ul",className:"task-list-item"},(0,n.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Caso passos anteriores tenham sucesso, o c\xf3digo recebe sinal verde para realizar um commit;")),(0,n.kt)("h3",{id:"fluxo-do-desenvolvimento-para-lan\xe7amento-de-release"},"Fluxo do Desenvolvimento para lan\xe7amento de release"),(0,n.kt)("p",null,"Todos os pipelines de bioinform\xe1tica acompanham testes autom\xe1ticos que ser\xe3o executados a cada Pull Request (PR). Estes testes envolvem testes de valida\xe7\xe3o que comparam os outputs esperados com os outputs do pipeline versionado na PR. C\xf3digos compartilhados entre pipelines, os testes tamb\xe9m validam se altera\xe7\xf5es em c\xf3digo podem afetar outros pipelines e garantem que o PR n\xe3o realize nenhuma mudan\xe7a n\xe3o desejada."),(0,n.kt)("p",null,"O nosso fluxo de integra\xe7\xe3o cont\xednua para Pull Requests (PR) segue o seguinte fluxo ilustrado abaixo:"),(0,n.kt)("p",null,(0,n.kt)("img",{src:t(9790).Z}),"\nFigura 12: Fluxo da constru\xe7\xe3o do build ap\xf3s PR"),(0,n.kt)("ul",{className:"contains-task-list"},(0,n.kt)("li",{parentName:"ul",className:"task-list-item"},(0,n.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Logo que um Pull request (PR) for submetido e houver altera\xe7\xf5es em c\xf3digo de pipeline (WDL e arquivos de configura\xe7\xe3o) a su\xedte de CI do Github entra em a\xe7\xe3o e cria uma inst\xe2ncia de testes;"),(0,n.kt)("li",{parentName:"ul",className:"task-list-item"},(0,n.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","\xc9 realizado uma ",(0,n.kt)("a",{parentName:"li",href:"/bioinfo-playbook/docs/guide-best-practices/style"},"avalia\xe7\xe3o de estilo")," de c\xf3digo-fonte e valida\xe7\xe3o de sintaxe da linguagem WDL;"),(0,n.kt)("li",{parentName:"ul",className:"task-list-item"},(0,n.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","S\xe3o realizados testes de integra\xe7\xe3o e funcionais a partir da ",(0,n.kt)("a",{parentName:"li",href:"(./tests.md)"},"su\xedte de testes automatizados"),";"),(0,n.kt)("li",{parentName:"ul",className:"task-list-item"},(0,n.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Caso passos anteriores tenham sucesso, o c\xf3digo recebe sinal verde para que o PR seja aprovado;")),(0,n.kt)("h2",{id:"branches-relacionadas-a-testes"},"Branches relacionadas a testes"),(0,n.kt)("p",null,"Nossa configura\xe7\xe3o de integra\xe7\xe3o cont\xednua utiliza as seguintes branches abaixo:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Branch"),(0,n.kt)("th",{parentName:"tr",align:null},"Prop\xf3sito"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"develop"),(0,n.kt)("td",{parentName:"tr",align:null},"Todo c\xf3digo que pretende ser lan\xe7ado ; ambiente de homologa\xe7\xe3o")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"master"),(0,n.kt)("td",{parentName:"tr",align:null},"Todo c\xf3digo que est\xe1vel e que j\xe1 passou por todos os testes; pipelines j\xe1 com releases publicadas")))),(0,n.kt)("p",null,"O PR ir\xe1 iniciar o pipeline de CI se ele identificar mudan\xe7as em c\xf3digo WDL, depend\xeancias do WDL (tasks), arquivos de configura\xe7\xe3o JSON, arquivos de teste ou inputs. No nosso reposit\xf3rio utilizamos o github actions com continuous integration, logo que \xe9 submetido ao reposit\xf3rio uma solicita\xe7\xe3o de pull request (PR) os CIs entram autom\xe1tico para realizar as etapas de valida\xe7\xe3o de estilo e sintaxe de c\xf3digo e em seguida os testes automatizados. Uma vez que as etapas concluam com sucesso, o CI envia uma notifica\xe7\xe3o informando que os builds e testes foram realizados com sucesso:"),(0,n.kt)("p",null,(0,n.kt)("img",{src:t(8752).Z}),"\nFigura 13: Tela de um PR com sucesso ap\xf3s build testada e aprovada."),(0,n.kt)("h3",{id:"exemplo-de-pipeline"},"Exemplo de Pipeline"),(0,n.kt)("p",null,"Abaixo disponibilizamos um pipeline de exemplo para chamada de dete\xe7\xe3o de variantes seguindo as pr\xe1ticas aqui estabelecidas. Nosso pipeline \xe9 de detec\xe7\xe3o de variantes germinativas para os genes BRCA1 e BRCA2 no genoma humano. Utilizamos como ferramentas o ",(0,n.kt)("a",{parentName:"p",href:"http://bio-bwa.sourceforge.net/"},"BWA-MEM")," para alinhamento das sequ\xeancias de DNA a partir dos FASTQs e o ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/freebayes/freebayes"},"Freebayes")," para detec\xe7\xe3o de variantes SNV e indels."),(0,n.kt)("p",null,(0,n.kt)("img",{src:t(7966).Z}),"\nFigura 14: Tela do reposit\xf3rio do pipeline germinativo wdl-demo-pipeline"),(0,n.kt)("h4",{id:"link-para-o-reposit\xf3rio--httpsgithubcomvarstationwdl-demo-pipeline"},"Link para o reposit\xf3rio:  ",(0,n.kt)("a",{parentName:"h4",href:"https://github.com/Varstation/wdl-demo-pipeline"},"https://github.com/Varstation/wdl-demo-pipeline")),(0,n.kt)("p",null,"Todo o pipeline seguiu o fluxo de desenvolvimento na branch DEVELOP com m\xfaltiplas solicita\xe7\xf5es de PR os quais foram revisadas e ajustadas para atender o nosso processo de build de testes. Possu\xedmos dois workflows de CI , o ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Varstation/wdl-demo-pipeline/blob/main/.github/workflows/ci.yml"},"primeiro")," para realizar a avalia\xe7\xe3o de sintaxe e estilo de c\xf3digo seguindo as boas pr\xe1ticas do nosso grupo, e o ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Varstation/wdl-demo-pipeline/blob/main/.github/workflows/ci.yml"},"segundo")," para realizar sucessivos testes de integra\xe7\xe3o para verifica\xe7\xe3o das etapas do pipeline para garantir que os mesmos continuem gerando os resultados v\xe1lidos."),(0,n.kt)("p",null,(0,n.kt)("img",{src:t(110).Z}),"\nFigura 15: Tela dos logs dos workflows a partir do Github Actions."),(0,n.kt)("p",null,"O build de documenta\xe7\xe3o tamb\xe9m \xe9 gerado a partir que \xe9 realizado a aprova\xe7\xe3o do PR, o qual \xe9 acionado uma ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Varstation/wdl-demo-pipeline/blob/main/.github/workflows/publish.yml"},"CI action")," espec\xedfica para constru\xe7\xe3o e publica\xe7\xe3o da documenta\xe7\xe3o em ambiente de produ\xe7\xe3o, releases s\xe3o geradas a partir de um commmit no reposit\xf3rio de gera\xe7\xe3o de tag (release)."),(0,n.kt)("p",null,(0,n.kt)("img",{src:t(2111).Z}),"\nFigura 16: Tela da documenta\xe7\xe3o do pipeline em WDL"))}u.isMDXComponent=!0},9790:function(e,a,t){a.Z=t.p+"assets/images/BuildWorkflow-e7877ac127e76fcea31093fe19539cc5.png"},3416:function(e,a,t){a.Z=t.p+"assets/images/Fluxograma_pipeline_-38e9a8e31e9c38afad5d618e2b818e60.png"},8902:function(e,a,t){a.Z=t.p+"assets/images/Localflow-a84dcdce5ef9ec17706a528b45c19fe6.png"},8752:function(e,a,t){a.Z=t.p+"assets/images/PR-success-2d61d169d740b614796947d983783764.png"},3427:function(e,a,t){a.Z=t.p+"assets/images/Scrum-Varstation-7328092da8c22b1f2d99ea3cfa7f85c1.png"},8813:function(e,a,t){a.Z=t.p+"assets/images/Squad-OMICS-Trello-454f6db61ce1dbb66de6bc202bad1d7c.png"},2457:function(e,a,t){a.Z=t.p+"assets/images/gitflow-2e812f3da6570d96e090ccaf3b811713.png"},110:function(e,a,t){a.Z=t.p+"assets/images/github-action-workflow-3c25f5c5d6be0a9a549a2d2cd9a261c4.png"},4447:function(e,a,t){a.Z=t.p+"assets/images/pipeline_template-e68f282fa6b4668b7f0436c5f4e62447.png"},1949:function(e,a,t){a.Z=t.p+"assets/images/pipeline_template_2-812c2a051b892499fcb4bc29341e5fdc.png"},6899:function(e,a,t){a.Z=t.p+"assets/images/pipeline_template_3-909e428cc2331c69a2a9e72906878126.png"},7966:function(e,a,t){a.Z=t.p+"assets/images/wdl-demo-pipeline-385e9132aec3c7c81a15ce2fee2dada7.png"},2111:function(e,a,t){a.Z=t.p+"assets/images/wdl-docs-fe30b8520e349d92cea61b22c061e0f2.png"}}]);