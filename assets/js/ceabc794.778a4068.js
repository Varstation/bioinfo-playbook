"use strict";(self.webpackChunkplaybook_website=self.webpackChunkplaybook_website||[]).push([[44],{3905:function(e,a,n){n.d(a,{Zo:function(){return p},kt:function(){return c}});var t=n(7294);function o(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function r(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){o(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,o=function(e,a){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=t.createContext({}),m=function(e){var a=t.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):r(r({},a),e)),n},p=function(e){var a=m(e.components);return t.createElement(l.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=m(n),c=o,k=u["".concat(l,".").concat(c)]||u[c]||d[c]||i;return n?t.createElement(k,r(r({ref:a},p),{},{components:n})):t.createElement(k,r({ref:a},p))}));function c(e,a){var n=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var m=2;m<i;m++)r[m]=n[m];return t.createElement.apply(null,r)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},536:function(e,a,n){n.r(a),n.d(a,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return m},toc:function(){return p},default:function(){return u}});var t=n(7462),o=n(3366),i=(n(7294),n(3905)),r=["components"],s={sidebar_position:5},l="Guia de Estilo",m={unversionedId:"guide-best-practices/style",id:"guide-best-practices/style",isDocsHomePage:!1,title:"Guia de Estilo",description:"Este documenta apresenta as recomenda\xe7\xf5es para escrever pipelines de bioinform\xe1tica em WDL (Workflow Description Language). O documento foi inicialmente baseado no BioWDL Style Guidelines, mas tamb\xe9m apresenta sugest\xf5es fornecidas pelo time de Bioinform\xe1tica do Varstation.",source:"@site/docs/guide-best-practices/style.md",sourceDirName:"guide-best-practices",slug:"/guide-best-practices/style",permalink:"/bioinfo-playbook/docs/guide-best-practices/style",editUrl:"https://github.com/varstation/bioinfo-playbook/edit/master/website/docs/guide-best-practices/style.md",version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Desenvolvimento do Pipeline",permalink:"/bioinfo-playbook/docs/guide-best-practices/development"},next:{title:"Testes Autom\xe1ticos",permalink:"/bioinfo-playbook/docs/guide-best-practices/tests"}},p=[{value:"Recuo",id:"recuo",children:[]},{value:"Linhas vazias",id:"linhas-vazias",children:[]},{value:"Espa\xe7amento em express\xf5es",id:"espa\xe7amento-em-express\xf5es",children:[]},{value:"Tamanho da linha e quebras de linha",id:"tamanho-da-linha-e-quebras-de-linha",children:[]},{value:"Conven\xe7\xe3o de nomes",id:"conven\xe7\xe3o-de-nomes",children:[{value:"Nomes de inputs",id:"nomes-de-inputs",children:[]},{value:"Evitando conflitos de nomes",id:"evitando-conflitos-de-nomes",children:[]}]},{value:"Modulariza\xe7\xe3o",id:"modulariza\xe7\xe3o",children:[]},{value:"Tasks",id:"tasks",children:[{value:"Sess\xe3o <code>command</code>",id:"sess\xe3o-command",children:[]},{value:"Sess\xe3o <code>runtime</code>",id:"sess\xe3o-runtime",children:[]},{value:"Sess\xe3o <code>parameter_meta</code>",id:"sess\xe3o-parameter_meta",children:[]}]},{value:"Nome de arquivos",id:"nome-de-arquivos",children:[]},{value:"Imports",id:"imports",children:[]},{value:"Aplica\xe7\xe3o do estilo",id:"aplica\xe7\xe3o-do-estilo",children:[]}],d={toc:p};function u(e){var a=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,t.Z)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"guia-de-estilo"},"Guia de Estilo"),(0,i.kt)("p",null,"Este documenta apresenta as recomenda\xe7\xf5es para escrever pipelines de bioinform\xe1tica em WDL (Workflow Description Language). O documento foi inicialmente baseado no ",(0,i.kt)("a",{parentName:"p",href:"https://biowdl.github.io/styleGuidelines.html"},"BioWDL Style Guidelines"),", mas tamb\xe9m apresenta sugest\xf5es fornecidas pelo time de Bioinform\xe1tica do Varstation."),(0,i.kt)("p",null,"Os exemplos aqui apresentados foram escritos na vers\xe3o 1.0 da linguagem."),(0,i.kt)("p",null,"As palavras-chaves da linguagem aparecem no texto como c\xf3digo incorporado e n\xe3o foram traduzidas. Por exemplo, ",(0,i.kt)("inlineCode",{parentName:"p"},"task")," e ",(0,i.kt)("inlineCode",{parentName:"p"},"workflow"),"."),(0,i.kt)("h2",{id:"recuo"},"Recuo"),(0,i.kt)("p",null,"A linguagem apresenta diferentes sess\xf5es que possuem escopo definidos em chaves (",(0,i.kt)("inlineCode",{parentName:"p"},"{}"),"), dessa forma, todo conte\xfado deve ser indentado. Atribui\xe7\xf5es de ",(0,i.kt)("inlineCode",{parentName:"p"},"input")," na chamada da ",(0,i.kt)("inlineCode",{parentName:"p"},"task")," tamb\xe9m deve ser indentado. A indenta\xe7\xe3o deve ser 4 caracteres de espa\xe7o por n\xedvel. Abertura das chaves deve ser na mesma linha da sess\xe3o, e fechamento das chaves deve estar no mesmo n\xedvel de indenta\xe7\xe3o da sess\xe3o. N\xe3o utilize tabula\xe7\xf5es."),(0,i.kt)("p",null,"Correto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wdl"},'workflow Example {\n    call SomeTask as DoStuff {\n        input:\n            number = 1,\n            letter = "a"\n    }\n}\n')),(0,i.kt)("p",null,"Incorreto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wdl"},'workflow Example {\n  call SomeTask as DoStuff {\n      input:\n      number = 1,\n      letter = "a"\n  }\n}\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Conte\xfado do bloco de ",(0,i.kt)("inlineCode",{parentName:"li"},"workflow")," recuado com 2 espa\xe7os, ao inv\xe9s de 4."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"input")," n\xe3o indentado.")),(0,i.kt)("h2",{id:"linhas-vazias"},"Linhas vazias"),(0,i.kt)("p",null,"As linhas vazias separam as sess\xf5es de uma ",(0,i.kt)("inlineCode",{parentName:"p"},"task")," e as chamadas de tarefas de um ",(0,i.kt)("inlineCode",{parentName:"p"},"workflow"),". Grupos de ",(0,i.kt)("inlineCode",{parentName:"p"},"input")," em comum podem ser separados por uma linha vazia para facilitar a leitura. Por exemplo, separar ",(0,i.kt)("em",{parentName:"p"},"inputs")," obrigat\xf3rios dos opcionais. Isso tamb\xe9m vale para sess\xf5es de ",(0,i.kt)("inlineCode",{parentName:"p"},"output")," e ",(0,i.kt)("inlineCode",{parentName:"p"},"parameter_meta"),". Linhas vazias extras s\xe3o desencorajadas."),(0,i.kt)("p",null,"Correto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wdl"},'task Echo {\n    input {\n        String message\n\n        String? outputPath # Optional input(s) separated from mandatory input(s)\n    }\n\n    command <<<\n        echo ~{message} ~{"> " + outputPath}\n    >>>\n\n    output {\n        File? outputFile = outputPath\n    }\n}\n')),(0,i.kt)("p",null,"Incorreto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wdl"},'task Echo {\n    input {\n        String message\n\n        String? outputPath\n    }\n\n\n    command <<<\n        echo ~{message} ~{"> " + outputPath}\n    >>>\n    output {\n        File? outputFile = outputPath\n    }\n\n}\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Duas linhas vazias entre os blocos ",(0,i.kt)("inlineCode",{parentName:"li"},"input")," e ",(0,i.kt)("inlineCode",{parentName:"li"},"command"),"."),(0,i.kt)("li",{parentName:"ul"},"Nenhuma linha branca entre os blocos ",(0,i.kt)("inlineCode",{parentName:"li"},"command")," e ",(0,i.kt)("inlineCode",{parentName:"li"},"output"),"."),(0,i.kt)("li",{parentName:"ul"},"Linha vazia desnecess\xe1ria entre as chaves de fechamento.")),(0,i.kt)("h2",{id:"espa\xe7amento-em-express\xf5es"},"Espa\xe7amento em express\xf5es"),(0,i.kt)("p",null,"WDL suporta diferentes operadores bin\xe1rios. Os elementos de uma express\xe3o devem estar separados por um caractere de espa\xe7o. A exce\xe7\xe3o \xe9 o operador un\xe1rio de nega\xe7\xe3o (",(0,i.kt)("inlineCode",{parentName:"p"},"!"),"), esse deve estar junto com o par\xeantese que cont\xe9m a express\xe3o l\xf3gica. Tamb\xe9m n\xe3o deve haver espa\xe7os entre os par\xeanteses do primeiro elemento interno."),(0,i.kt)("p",null,"Em chamadas de fun\xe7\xf5es (da biblioteca padr\xe3o), n\xe3o deve haver espa\xe7os entre o nome da fun\xe7\xe3o e o par\xeantese de abertura. Argumentos de fun\xe7\xf5es devem ser separados por v\xedrgula seguido de um caractere de espa\xe7o. N\xe3o deve haver espa\xe7os entre o par\xeantese de abertura e o primeiro argumento, nem espa\xe7o entre o \xfaltimo argumento da fun\xe7\xe3o e o par\xeantese de fechamento."),(0,i.kt)("p",null,"Existem diversos operadores que devem ser cercados por espa\xe7os:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Less than (menor que): ",(0,i.kt)("inlineCode",{parentName:"li"},"<")),(0,i.kt)("li",{parentName:"ul"},"Less then or equal (menor ou igual a): ",(0,i.kt)("inlineCode",{parentName:"li"},"<=")),(0,i.kt)("li",{parentName:"ul"},"Greater than (maior que): ",(0,i.kt)("inlineCode",{parentName:"li"},">")),(0,i.kt)("li",{parentName:"ul"},"Greater than or equal (maior ou igual a): ",(0,i.kt)("inlineCode",{parentName:"li"},">=")),(0,i.kt)("li",{parentName:"ul"},"Equal (igual a): ",(0,i.kt)("inlineCode",{parentName:"li"},"==")),(0,i.kt)("li",{parentName:"ul"},"Not Equal (diferente de): ",(0,i.kt)("inlineCode",{parentName:"li"},"!=")),(0,i.kt)("li",{parentName:"ul"},"Logical AND (E l\xf3gico): ",(0,i.kt)("inlineCode",{parentName:"li"},"&&")),(0,i.kt)("li",{parentName:"ul"},"Logical OR (OU l\xf3gico): ",(0,i.kt)("inlineCode",{parentName:"li"},"||")),(0,i.kt)("li",{parentName:"ul"},"Assignment (atribui\xe7\xe3o): ",(0,i.kt)("inlineCode",{parentName:"li"},"="))),(0,i.kt)("p",null,"Tamb\xe9m h\xe1 operadores que devem sempre ser precedidos de um espa\xe7o, mas n\xe3o seguido por um (mesmo quando preceder uma colchetes). Se esses operados s\xe3o aplicados ao resultado de uma express\xe3o, a express\xe3o deve ser cercada por colchetes (",(0,i.kt)("inlineCode",{parentName:"p"},"[]"),")."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Logical NOT (N\xc3O l\xf3gico): ",(0,i.kt)("inlineCode",{parentName:"li"},"!")),(0,i.kt)("li",{parentName:"ul"},"Unary plus (mais un\xe1rio): ",(0,i.kt)("inlineCode",{parentName:"li"},"+")),(0,i.kt)("li",{parentName:"ul"},"Unary negation (menos un\xe1rio): ",(0,i.kt)("inlineCode",{parentName:"li"},"-"))),(0,i.kt)("p",null,"Correto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wdl"},"1 + 1\n1 + 1/2\n(1 + 1) / 2\n!(a == -1)\n")),(0,i.kt)("p",null,"Incorreto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wdl"},"1+1\n1 + 1 / 2\n\n( 1+1 ) / 2 \n(1 + 1)/2\n\n!(a==-1) \n! (a == -1) or !a == -1\n")),(0,i.kt)("h2",{id:"tamanho-da-linha-e-quebras-de-linha"},"Tamanho da linha e quebras de linha"),(0,i.kt)("p",null,"As linhas n\xe3o devem ultrapassar o comprimento de 100 caracteres. Se a linha exceder esse limite, ela deve ser quebrada em duas ou mais linhas. As linhas subsequentes devem ser indentadas em rela\xe7\xe3o a primeira, em um n\xedvel (4 caracteres de espa\xe7o). Quebras de linha devem ocorrer em lugares l\xf3gicos da express\xe3o, ao inv\xe9s de apenas cumprir o tamanho limite, alguns exemplos:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Depois de uma virgula."),(0,i.kt)("li",{parentName:"ul"},"Antes de ",(0,i.kt)("inlineCode",{parentName:"li"},"then")," ou ",(0,i.kt)("inlineCode",{parentName:"li"},"else")," em uma express\xe3o ",(0,i.kt)("inlineCode",{parentName:"li"},"if-then-else"),"."),(0,i.kt)("li",{parentName:"ul"},"Depois de um par\xeantese de abertura (",(0,i.kt)("inlineCode",{parentName:"li"},"("),")."),(0,i.kt)("li",{parentName:"ul"},"Depois de um operador que teria um espa\xe7o como separador do elemento seguinte.")),(0,i.kt)("p",null,"Alguns lugares onde sempre deve haver quebra de linhas:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Entre ",(0,i.kt)("inlineCode",{parentName:"li"},"input")," de um bloco de chamada da task (",(0,i.kt)("inlineCode",{parentName:"li"},"call"),")."),(0,i.kt)("li",{parentName:"ul"},"Depois de ",(0,i.kt)("inlineCode",{parentName:"li"},"inputs:")," de um bloco de chamada da task."),(0,i.kt)("li",{parentName:"ul"},"Depois de uma chave de abertura (",(0,i.kt)("inlineCode",{parentName:"li"},"{"),")."),(0,i.kt)("li",{parentName:"ul"},"Depois de uma chave de fechamento (",(0,i.kt)("inlineCode",{parentName:"li"},"}"),")."),(0,i.kt)("li",{parentName:"ul"},"Depois de um ",(0,i.kt)("em",{parentName:"li"},"heredoc")," de abertura da sess\xe3o ",(0,i.kt)("inlineCode",{parentName:"li"},"command")," (",(0,i.kt)("inlineCode",{parentName:"li"},"<<<"),")."),(0,i.kt)("li",{parentName:"ul"},"Depois de um ",(0,i.kt)("em",{parentName:"li"},"heredoc")," de fechamento da sess\xe3o ",(0,i.kt)("inlineCode",{parentName:"li"},"command")," (",(0,i.kt)("inlineCode",{parentName:"li"},">>>"),").")),(0,i.kt)("p",null,"Correto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wdl"},'Int value = if defined(aVariableThatHasAWayTooLongName)\n    then aVariableThatHasAWayTooLongName else 10\n\n# or\n\nInt value = if defined(aVariableThatHasAWayTooLongName)\n    then aVariableThatHasAWayTooLongName\n    else 10\n\n# ----\n\ncall SomeTask as DoStuff {\n    input:\n        number = 1,\n        letter = "a"\n}\n')),(0,i.kt)("p",null,"Incorreto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wdl"},'# too long\nInt value = if defined(aVariableThatHasAWayTooLongName) then aVariableThatHasAWayTooLongName else 10\n\n# or wrong line break\nInt value = if defined(aVariableThatHasAWayTooLongName) then\n    aVariableThatHasAWayTooLongName else 10\n\n# ----\n\n# multiple inputs on one line\ncall SomeTask as DoStuff {\n    input:\n        number = 1, letter = "a"\n}\n\n# missing line breaks\ncall SomeTask as DoStuff {input: number = 1, letter = "a"}\n')),(0,i.kt)("h2",{id:"conven\xe7\xe3o-de-nomes"},"Conven\xe7\xe3o de nomes"),(0,i.kt)("p",null,"Todos os ",(0,i.kt)("em",{parentName:"p"},"imports")," e ",(0,i.kt)("em",{parentName:"p"},"calls")," devem ser nomeados utilizando a sintaxe de ",(0,i.kt)("inlineCode",{parentName:"p"},"as"),". Os nomes de v\xe1rios tipos e objetos devem ser formatados conforme listado abaixo. A lista abaixo apresenta o formato recomendado para cada tipo."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"task"),": UpperCamelCase"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"workflow"),": UpperCamelCase"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"struct"),": UpperCamelCase"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"call")," ",(0,i.kt)("inlineCode",{parentName:"li"},"as"),": UpperCamelCase"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"input"),": see the notes below"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"import")," ",(0,i.kt)("inlineCode",{parentName:"li"},"as"),": lowerCamelCase"),(0,i.kt)("li",{parentName:"ul"},"Vari\xe1veis: lowerCamelCase")),(0,i.kt)("h3",{id:"nomes-de-inputs"},"Nomes de inputs"),(0,i.kt)("p",null,"Nomes de ",(0,i.kt)("inlineCode",{parentName:"p"},"input")," devem imitar a vers\xe3o longa dos par\xe2metros da ferramenta principal da ",(0,i.kt)("inlineCode",{parentName:"p"},"task"),". Normalmente, os par\xe2metros de linha de comando separam as palavras com tra\xe7os (",(0,i.kt)("inlineCode",{parentName:"p"},"-"),"), nesses casos o ",(0,i.kt)("inlineCode",{parentName:"p"},"input")," da ",(0,i.kt)("inlineCode",{parentName:"p"},"task")," ser\xe1 escrito usando ",(0,i.kt)("inlineCode",{parentName:"p"},"lowerCamelCase")," de forma que se assemelhe com o par\xe2metro da ferramenta. Palavras capitalizadas (como VCF, CNV e BAM) devem ser escritos como lowerCamelCase (",(0,i.kt)("inlineCode",{parentName:"p"},"vcfIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"mappedBam"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"enableCnvCalling"),"). Quando um ",(0,i.kt)("inlineCode",{parentName:"p"},"input")," representar um caminho para arquivo, que n\xe3o est\xe1 associado com um argumento do comando, o nome do ",(0,i.kt)("inlineCode",{parentName:"p"},"input")," deve terminar com ",(0,i.kt)("inlineCode",{parentName:"p"},"Path"),". Note que isso \xe9 apenas quando o ",(0,i.kt)("inlineCode",{parentName:"p"},"input")," \xe9 do tipo ",(0,i.kt)("inlineCode",{parentName:"p"},"String")," ou ",(0,i.kt)("inlineCode",{parentName:"p"},"String?"),"."),(0,i.kt)("h3",{id:"evitando-conflitos-de-nomes"},"Evitando conflitos de nomes"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Task")," ou ",(0,i.kt)("inlineCode",{parentName:"p"},"Flow")," pode ser adicionado no final das ",(0,i.kt)("em",{parentName:"p"},"tasks")," ou ",(0,i.kt)("em",{parentName:"p"},"workflows")," importados para evitar conflitos de nomes entre ",(0,i.kt)("inlineCode",{parentName:"p"},"call")," e ",(0,i.kt)("inlineCode",{parentName:"p"},"import"),"."),(0,i.kt)("p",null,"Correto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wdl"},"task DoStuff {\n    input {\n        File inputFile\n        String outputPath\n\n        Int maxRAM\n    }\n\n    command <<<\n        someScript \\\n        -i ~{inputFile} \\\n        --maxRAM ~{maxRAM} \\\n        -o outputPath\n    >>>\n\n    output {\n        File outputFile = outputPath\n    }\n}\n")),(0,i.kt)("p",null,"Incorreto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wdl"},"task doStuff {\n    input {\n        File input_file\n        String OutputPath\n\n        Int ram\n    }\n\n    command <<<\n        someScript \\\n        -i ~{input} \\\n        --max-ram ~{ram} \\\n        -o outputPath\n    >>>\n\n    output {\n        File outputFile = outputPath\n    }\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Nome da ",(0,i.kt)("inlineCode",{parentName:"li"},"task")," n\xe3o est\xe1 em UpperCamelCase."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"input_file")," n\xe3o est\xe1 em lowerCamelCase"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"OutputPath")," n\xe3o est\xe1 em lowerCamelCase"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ram")," n\xe3o combina com o par\xe2metro que ele representa (",(0,i.kt)("inlineCode",{parentName:"li"},"--max-ram"),").")),(0,i.kt)("h2",{id:"modulariza\xe7\xe3o"},"Modulariza\xe7\xe3o"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Tasks")," e ",(0,i.kt)("em",{parentName:"p"},"structs")," gen\xe9ricas devem ser mantidas em arquivos separados dos ",(0,i.kt)("em",{parentName:"p"},"workflows"),". Apenas se uma ",(0,i.kt)("inlineCode",{parentName:"p"},"task")," \xe9 pequena e espec\xedfica para um determinado ",(0,i.kt)("inlineCode",{parentName:"p"},"workflow"),", ela pode ser mantida no mesmo arquivo que o ",(0,i.kt)("inlineCode",{parentName:"p"},"workflow"),". As ",(0,i.kt)("em",{parentName:"p"},"tasks")," e ",(0,i.kt)("em",{parentName:"p"},"structs")," relacionadas com a mesma ferramenta ou cole\xe7\xe3o devem estar no mesmo arquivo. Se um arquivo cont\xe9m m\xfaltiplas ",(0,i.kt)("em",{parentName:"p"},"tasks")," e/ou ",(0,i.kt)("em",{parentName:"p"},"structs"),", as ",(0,i.kt)("em",{parentName:"p"},"structs")," devem ser mantidos abaixo das ",(0,i.kt)("em",{parentName:"p"},"tasks")," e ambas as ",(0,i.kt)("em",{parentName:"p"},"tasks")," e ",(0,i.kt)("em",{parentName:"p"},"structs")," devem estar ordenadas alfabeticamente. ",(0,i.kt)("em",{parentName:"p"},"Calls")," e atribui\xe7\xe3o de valores em um ",(0,i.kt)("inlineCode",{parentName:"p"},"workflow")," devem ser colocados na ordem da execu\xe7\xe3o."),(0,i.kt)("p",null,"Correto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wdl"},"task A {\n    command <<<\n        echo A\n    >>>\n}\n\ntask Z {\n    command <<<\n        echo Z\n    >>>\n}\n\nstruct B {\n    String name\n}\n")),(0,i.kt)("p",null,"Incorreto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wdl"},"# Structs and tasks mixed\ntask A {\n    command <<<\n        echo A\n    >>>\n}\n\nstruct B {\n    String name\n}\n\ntask Z {\n    command <<<\n        echo Z\n    >>>\n}\n\n# Not in alphabetical order\ntask Z {\n    command <<<\n        echo Z\n    >>>\n}\n\ntask A {\n    command <<<\n        echo A\n    >>>\n}\n\nstruct B {\n    String name\n}\n")),(0,i.kt)("h2",{id:"tasks"},"Tasks"),(0,i.kt)("h3",{id:"sess\xe3o-command"},"Sess\xe3o ",(0,i.kt)("inlineCode",{parentName:"h3"},"command")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Cada op\xe7\xe3o em um comando bash deve estar em uma nova linha. A linha anterior deve terminar com uma barra invertida (",(0,i.kt)("inlineCode",{parentName:"li"},"\\"),"). Agrupamentos de op\xe7\xf5es em uma mesma linha pode ser aceit\xe1vel. Por exemplo, v\xe1rios par\xe2metros de mem\xf3ria do Java podem estar na mesma linha, desde que n\xe3o ultrapasse o tamanho limite de linha."),(0,i.kt)("li",{parentName:"ol"},"Todos os comandos bash devem come\xe7ar com ",(0,i.kt)("inlineCode",{parentName:"li"},"set -e -o pipefail")," se mais de um comando bash \xe9 executado pela tarefa. "),(0,i.kt)("li",{parentName:"ol"},"Se (e apenas se) nenhuma imagem Docker \xe9 especificada na sess\xe3o runtime, comandos devem ter um ",(0,i.kt)("inlineCode",{parentName:"li"},"~{preCommand}")," seguido do item 2 e antes do comando em si. Isso permitir\xe1, por exemplo, que um ambiente conda seja carregado antes da execu\xe7\xe3o da task. Esse pr\xe9-comando deve ser colocado diretamente antes do comando em si e deve ser configur\xe1vel como um input."),(0,i.kt)("li",{parentName:"ol"},"A sintaxe de ",(0,i.kt)("em",{parentName:"li"},"heredoc")," ",(0,i.kt)("inlineCode",{parentName:"li"},"<<<>>>")," para o bloco de comando e ",(0,i.kt)("em",{parentName:"li"},"placeholder")," ",(0,i.kt)("inlineCode",{parentName:"li"},"~{...}")," para vari\xe1veis deve ser usada em todos os casos ao inv\xe9s das chaves (",(0,i.kt)("inlineCode",{parentName:"li"},"{}"),") e ",(0,i.kt)("inlineCode",{parentName:"li"},"${...}"),", para evitar conflitos com vari\xe1veis do bash.")),(0,i.kt)("h3",{id:"sess\xe3o-runtime"},"Sess\xe3o ",(0,i.kt)("inlineCode",{parentName:"h3"},"runtime")),(0,i.kt)("p",null,"Uma imagem Docker deve ser fornecida para todas as tarefas. Essas imagens devem estar dispon\xedveis publicamente (apenas quando o ",(0,i.kt)("em",{parentName:"p"},"pipeline")," tamb\xe9m \xe9 publico). Biocontainers s\xe3o geralmente prefer\xedveis (o recomendado \xe9 utilizar imagens disponibilizadas no Amazon ECR). Apenas se uma tarefa realiza executa um comando altamente gen\xe9rico (um simples ls) pode ter a imagem Docker omitida (todas as tarefas devem providenciar uma imagem, \xe9 recomendado executar comandos gen\xe9ricos em tarefas anteriores ap\xf3s a execu\xe7\xe3o do comando principal)."),(0,i.kt)("h3",{id:"sess\xe3o-parameter_meta"},"Sess\xe3o ",(0,i.kt)("inlineCode",{parentName:"h3"},"parameter_meta")),(0,i.kt)("p",null,"\xc9 altamente aconselh\xe1vel que um parameter_meta seja definido, contendo a descri\xe7\xe3o tanto dos ",(0,i.kt)("inlineCode",{parentName:"p"},"input")," quando dos outputs da ",(0,i.kt)("inlineCode",{parentName:"p"},"task"),"."),(0,i.kt)("p",null,"Correto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wdl"},'task DoStuff {\n    input {\n        File inputFile\n        String outputPath\n        Int maxRAM\n\n        String? preCommand\n    }\n\n    command <<<\n        set -e -o pipefail\n        mkdir -p `dirname outputPath`\n        someScript \\\n        -i ~{inputFile} \\\n        --maxRAM ~{maxRAM} \\\n        -o outputPath\n    >>>\n\n    output {\n        File outputFile = outputPath\n    }\n\n    runtime {\n      docker: "alpine"\n    }\n\n    parameter_meta {\n        inputFile: "A file"\n        outputPath: "A location to put the output"\n        maxRam: "The maximum amount of RAM that can be used (in GB)"\n\n        outputFile: "A file containing the output"\n    }\n}\n')),(0,i.kt)("p",null,"Incorreto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wdl"},"task DoStuff {\n    input {\n        File inputFile\n        String outputPath\n\n        Int maxRAM\n    }\n\n    command <<<\n        mkdir -p `dirname outputPath`\n        someScript -i ${inputFile} --maxRAM ${maxRAM} -o outputPath\n    >>>\n\n    output {\n        File outputFile = outputPath\n    }\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Todas os par\xe2metros est\xe3o na mesma linha."),(0,i.kt)("li",{parentName:"ul"},"Est\xe1 faltando ",(0,i.kt)("inlineCode",{parentName:"li"},"set -e -o pipefail"),"."),(0,i.kt)("li",{parentName:"ul"},"Est\xe1 faltando ",(0,i.kt)("inlineCode",{parentName:"li"},"preCommand")," pois a imagem Docker n\xe3o foi definida."),(0,i.kt)("li",{parentName:"ul"},"Est\xe1 faltando a sess\xe3o ",(0,i.kt)("inlineCode",{parentName:"li"},"runtime"),"."),(0,i.kt)("li",{parentName:"ul"},"Est\xe1 faltando a sess\xe3o ",(0,i.kt)("inlineCode",{parentName:"li"},"parameter_meta"),".")),(0,i.kt)("h2",{id:"nome-de-arquivos"},"Nome de arquivos"),(0,i.kt)("p",null,"Arquivos WDL devem ter o mesmo nome do ",(0,i.kt)("inlineCode",{parentName:"p"},"workflow")," ou ",(0,i.kt)("inlineCode",{parentName:"p"},"task")," usando o formato ",(0,i.kt)("inlineCode",{parentName:"p"},"dashed-case"),". Nomes gen\xe9ricos como ",(0,i.kt)("inlineCode",{parentName:"p"},"tasks.wdl")," e ",(0,i.kt)("inlineCode",{parentName:"p"},"structs.wdl")," podem ser utilizados quando o arquivo possui mais de uma ",(0,i.kt)("inlineCode",{parentName:"p"},"task")," ou ",(0,i.kt)("inlineCode",{parentName:"p"},"struct"),". O mesmo n\xe3o vale para ",(0,i.kt)("inlineCode",{parentName:"p"},"workflow")," visto que pode haver apenas um por arquivo. O arquivo do ",(0,i.kt)("inlineCode",{parentName:"p"},"workflow")," deve estar na raiz do reposit\xf3rio e os arquivos importados devem estar dentro do diret\xf3rio ",(0,i.kt)("inlineCode",{parentName:"p"},"tasks/")," para facilitar a cria\xe7\xe3o do arquivo ZIP de depend\xeancias. Exemplos:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Workflow ",(0,i.kt)("inlineCode",{parentName:"li"},"DragenDnaGermline"),", arquivo ",(0,i.kt)("inlineCode",{parentName:"li"},"drage-dna-germline.wdl")),(0,i.kt)("li",{parentName:"ul"},"Task ",(0,i.kt)("inlineCode",{parentName:"li"},"CompleteVariantCalling"),", arquivo ",(0,i.kt)("inlineCode",{parentName:"li"},"complete-variant-calling.wdl")),(0,i.kt)("li",{parentName:"ul"},"Struct ",(0,i.kt)("inlineCode",{parentName:"li"},"SampleInputs"),", arquivo ",(0,i.kt)("inlineCode",{parentName:"li"},"structs.wdl"))),(0,i.kt)("h2",{id:"imports"},"Imports"),(0,i.kt)("p",null,"Os ",(0,i.kt)("inlineCode",{parentName:"p"},"import")," devem ser colocados em ordem alfab\xe9tica no topo do arquivo. Todas as importa\xe7\xf5es devem ser nomeadas usando a sintaxe do ",(0,i.kt)("inlineCode",{parentName:"p"},"as"),"."),(0,i.kt)("h2",{id:"aplica\xe7\xe3o-do-estilo"},"Aplica\xe7\xe3o do estilo"),(0,i.kt)("p",null,"N\xe3o existe (ainda) uma forma automatizada de formatar ou verificar estilos de arquivos WDL de acordo com este guia. Cabe aos autores e revisores assegurar que as diretrizes sejam cumpridas."),(0,i.kt)("p",null,"Todos est\xe3o convidados a melhorar o guia de estilo e propor altera\xe7\xf5es. Para tirar d\xfavidas utilize a sess\xe3o de Issues: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Varstation/bioinfo-playbook/issues"},"https://github.com/Varstation/bioinfo-playbook/issues"),"."))}u.isMDXComponent=!0}}]);