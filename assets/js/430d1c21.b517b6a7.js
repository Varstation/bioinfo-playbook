"use strict";(self.webpackChunkplaybook_website=self.webpackChunkplaybook_website||[]).push([[74],{3905:function(e,o,r){r.d(o,{Zo:function(){return m},kt:function(){return c}});var n=r(7294);function t(e,o,r){return o in e?Object.defineProperty(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}function a(e,o){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);o&&(n=n.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var o=1;o<arguments.length;o++){var r=null!=arguments[o]?arguments[o]:{};o%2?a(Object(r),!0).forEach((function(o){t(e,o,r[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(r,o))}))}return e}function s(e,o){if(null==e)return{};var r,n,t=function(e,o){if(null==e)return{};var r,n,t={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],o.indexOf(r)>=0||(t[r]=e[r]);return t}(e,o);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],o.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var u=n.createContext({}),l=function(e){var o=n.useContext(u),r=o;return e&&(r="function"==typeof e?e(o):i(i({},o),e)),r},m=function(e){var o=l(e.components);return n.createElement(u.Provider,{value:o},e.children)},d={inlineCode:"code",wrapper:function(e){var o=e.children;return n.createElement(n.Fragment,{},o)}},p=n.forwardRef((function(e,o){var r=e.components,t=e.mdxType,a=e.originalType,u=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=l(r),c=t,f=p["".concat(u,".").concat(c)]||p[c]||d[c]||a;return r?n.createElement(f,i(i({ref:o},m),{},{components:r})):n.createElement(f,i({ref:o},m))}));function c(e,o){var r=arguments,t=o&&o.mdxType;if("string"==typeof e||t){var a=r.length,i=new Array(a);i[0]=p;var s={};for(var u in o)hasOwnProperty.call(o,u)&&(s[u]=o[u]);s.originalType=e,s.mdxType="string"==typeof e?e:t,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4773:function(e,o,r){r.r(o),r.d(o,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return m},default:function(){return p}});var n=r(7462),t=r(3366),a=(r(7294),r(3905)),i=["components"],s={sidebar_position:3},u="Executando seu pipeline remotamente",l={unversionedId:"guide-running/running-remote-deployed-pipeline",id:"guide-running/running-remote-deployed-pipeline",isDocsHomePage:!1,title:"Executando seu pipeline remotamente",description:"Neste tutorial iremos apresentar como executamos o pipeline em WDL em Cromwell hospedados em ambientes remotos ou cloud. Ao fim desta se\xe7\xe3o, voc\xea ter\xe1 a capacidade de poder executar seus pipelines wdl utilizando de recursos de infra-estrutura mais sofisticados em nuvem como AWS, Azure , ou at\xe9 em outro ambiente-cloud privado.",source:"@site/docs/guide-running/running-remote-deployed-pipeline.md",sourceDirName:"guide-running",slug:"/guide-running/running-remote-deployed-pipeline",permalink:"/bioinfo-playbook/docs/guide-running/running-remote-deployed-pipeline",editUrl:"https://github.com/varstation/bioinfo-playbook/edit/master/website/docs/guide-running/running-remote-deployed-pipeline.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Executando um pipeline localmente",permalink:"/bioinfo-playbook/docs/guide-running/running-local-deployed-pipeline"},next:{title:"Construindo ou melhorando seu pipeline em WDL",permalink:"/bioinfo-playbook/docs/guide-develop/checklist"}},m=[{value:"Vis\xe3o do Oliver em execu\xe7\xe3o",id:"vis\xe3o-do-oliver-em-execu\xe7\xe3o",children:[]},{value:"Executando seu pipeline no ambiente Cromwell servidor",id:"executando-seu-pipeline-no-ambiente-cromwell-servidor",children:[]}],d={toc:m};function p(e){var o=e.components,s=(0,t.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},d,s,{components:o,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"executando-seu-pipeline-remotamente"},"Executando seu pipeline remotamente"),(0,a.kt)("p",null,"Neste tutorial iremos apresentar como executamos o pipeline em WDL em Cromwell hospedados em ambientes remotos ou cloud. Ao fim desta se\xe7\xe3o, voc\xea ter\xe1 a capacidade de poder executar seus pipelines wdl utilizando de recursos de infra-estrutura mais sofisticados em nuvem como AWS, Azure , ou at\xe9 em outro ambiente-cloud privado."),(0,a.kt)("h2",{id:"vis\xe3o-do-oliver-em-execu\xe7\xe3o"},"Vis\xe3o do Oliver em execu\xe7\xe3o"),(0,a.kt)("p",null,"Para executar um pipeline em um orquestrador Cromwell hospedado remotamente, utilizamos de um gerenciador de orquestramento open-source desenvolvido pela grupo do hospital Saint Jude Cloud Team: oliver.  Baseado na sua p\xe1gina principal, esta ferramenta pode auxiliar no processo de submiss\xe3o, inspe\xe7\xe3o, interrup\xe7\xe3o e reexecu\xe7\xe3o de workflows em ambiente Cromwell.\nEle tamb\xe9m permite a possibilidade de rastrear os jobs de execu\xe7\xe3o para facilitar o reporting. Permite tamb\xe9m enviar par\xe2metros\nvia command-line ou via JSON files. E finalmente, a sua integra\xe7\xe3o com ambientes em nuvem como aws e azure, facilitando o interfaceamento com estes ambientes nativos em cloud."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Docusaurus logo",src:r(298).Z}),"\nFigura 2: Utilit\xe1rio de orquestramento Oliver em execu\xe7\xe3o no terminal. Ferramenta open-source desenvolvida pelo time do Hospital Saint Jude."),(0,a.kt)("h2",{id:"executando-seu-pipeline-no-ambiente-cromwell-servidor"},"Executando seu pipeline no ambiente Cromwell servidor"),(0,a.kt)("p",null,"O servidor Cromwell pode est\xe1 rodando em um ambiente nuvem remoto e este oferece um set de APIs que permitem a submiss\xe3o e monitoramento dos jobs para processamento. Este cen\xe1rio \xe9 o ideal para os pipelines que exigem maior poder de processamento e mem\xf3ria, que pode ser um limitante quando rodar na m\xe1quina do bioinformata.  No Varstation possu\xedmos um servidor de produ\xe7\xe3o que roda o ambiente Cromwell hospedado na cloud AWS. Este se aproveita de todos os recursos computacionais da AWS permitindo executar m\xfaltiplos jobs em paralelo. "),(0,a.kt)("p",null,"Na figura 3 ilustramos de forma simplificada o fluxo de submiss\xe3o de um job em um Servidor Cromwell. A documenta\xe7\xe3o completa de toda a API de interfaceamento com o Cromwell pode ser encontrada neste link."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Docusaurus logo",src:r(1010).Z}),"\nFigura 3: Fluxo do Pipeline para processamento de pipelines com Cromwell Modo Servidor"),(0,a.kt)("p",null,"A maneira mais r\xe1pida de executar o nosso pipeline, \xe9 instalar o bioconda e rodar os seguintes comandos:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"conda create -n workflows-dev python=3.7 -y\nconda activate workflows-dev\nconda install -c conda-forge  oliver cromwell -y\ngit clone git@github.com:stjudecloud/workflows.git\ncd workflows\n")),(0,a.kt)("p",null,"Quaisquer um dos workflows na pasta workflow s\xe3o bons exemplos para come\xe7ar. Vamos precisar configurar o oliver antes de executarmos pela primeira vez:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ oliver configure\n")),(0,a.kt)("p",null,"J\xe1 temos uma configura\xe7\xe3o padr\xe3o para executar em nossos servidores AWS de homologa\xe7\xe3o e uma para executar em nossos servidores locais da Genomika."),(0,a.kt)("p",null,"Abaixo os comandos necess\xe1rios para submeter um de nossos workflows."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"oliver submit workflow.wdl inputs.json input_key=input_value\n")),(0,a.kt)("p",null,"Assim que executar o comando acima, o utilit\xe1rio oliver ir\xe1 submeter o job para o orquestrador Cromwell. Para inspecionar o status do job, voc\xea pode interrogar o servidor sobre o seu status."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"oliver inspect workflow-id\n")),(0,a.kt)("p",null,"Se voc\xea n\xe3o tem certeza qual \xe9 o id do seu workflow submetido, voc\xea pode rastrear o mesmo por meio do comando status."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"# detailed view, which shows individual workflow statuses\noliver status -d\n")),(0,a.kt)("p",null,"Assim que executar o comando acima, o orquestrador Cromwell ir\xe1 apresentar mensagens no terminal sobre o andamento do pipeline\nat\xe9 que o workflow seja executado por completo com sucesso."),(0,a.kt)("p",null,"Para avaliar um dos outputs de sa\xeddas utilize o comando abaixo:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"oliver outputs workflow-id\n")),(0,a.kt)("p",null," Neste pipeline acima pegamos um bam file pr\xe9-processado e chamamos variantes com o haplotypeCaller. O arquivo final \xe9 um arquivo de variantes VCF em que separamos em SNPs e indels. Vamos olhar um dos outputs (sa\xeddas). A maneira mais f\xe1cil \xe9 abrir o vcf como um editor de texto simples, usando o seu terminal ou abrindo via o editor de textos."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"#CHROM  POS ID  REF ALT QUAL  FILTER  INFO  FORMAT  NA12878\n20  9999996 . A ACT 534.73  . AC=2;AF=1.00;AN=2;DP=12;FS=0.000;MLEAC=2;MLEAF=1.00;MQ=60.00;QD=25.82;SOR=5.136 GT:AD:DP:GQ:PL  1/1:0,12:12:39:572,39,0\n20  10001436  . A AAGGCT  1222.73 . AC=2;AF=1.00;AN=2;DP=29;FS=0.000;MLEAC=2;MLEAF=1.00;MQ=60.00;QD=32.17;SOR=0.836 GT:AD:DP:GQ:PL  1/1:0,28:28:84:1260,84,0\n")),(0,a.kt)("p",null,"Agora que voc\xea aprendeu a como rodar seu pipeline em um de nossos orquestradores Cromwell em modo servidor utilizando o utilit\xe1rio de interfaceamento oliver. Existe tamb\xe9m a op\xe7\xe3o de executar o mesmo localmente."))}p.isMDXComponent=!0},1010:function(e,o,r){o.Z=r.p+"assets/images/cromwell-73b80931a50445d184f7cfc104f61374.jpeg"},298:function(e,o,r){o.Z=r.p+"assets/images/oliver-aac57805b295bbcccd4c9664b024dfcd.gif"}}]);